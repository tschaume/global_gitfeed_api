#!/usr/bin/env python
# push to api.the-huck.com

import requests, json, os, string, sys, git, string
from requests.auth import HTTPBasicAuth
from datetime import datetime
from fnmatch import fnmatch

def prompt(s):
  print s
  return sys.stdin.readline().strip()

#API = '127.0.0.1:5000' # dev
API = 'api.the-huck.com' # prod
gitprojects = 'http://%s/gitprojects' % API
gitcommits = 'http://%s/gitcommits' % API

# project name & url
project_dir = os.path.dirname(os.path.abspath(__file__))
patharr = string.split(project_dir, '/')
project = patharr[-1]
if os.path.join(*patharr[-2:]) == '.git/hooks':
  project = patharr[-3]
  project_dir = os.path.join(*patharr[:-2])
project_url = '%s/%s' % (gitprojects, project)
print project_url

# check whether project exists, add if not
project_existed = True
if requests.get(project_url).status_code != requests.codes.ok:
  print 'adding %s' % project
  r = requests.post(
    gitprojects, data={'name': project},
    auth=HTTPBasicAuth(prompt('API user: '), prompt('password: '))
  )
  r.raise_for_status()
  project_existed = False

# get the project id
project_id = requests.get(project_url).json().get('_id')

# get the payload of commits
# TODO: other than first remote and active branch? '--all'
repo = git.Repo(project_dir)
remote = repo.remotes[0].name
branch = repo.active_branch
author = 'Patrick*'
payload = [
  {
    'project': project_id, 'message': c.summary,
    'datetime': datetime.fromtimestamp(c.committed_date).strftime('%c'),
    'sha1': string.split(c.name_rev)[0],
    'deletions': c.stats.total.get('deletions'),
    'lines': c.stats.total.get('lines'),
    'insertions': c.stats.total.get('insertions'),
    'files': c.stats.total.get('files')
  }
  for c in repo.iter_commits(
    '%s/%s..HEAD' %(remote, branch) if project_existed else None
  )
  if fnmatch(c.author.name, author)
]

# push payload to API
headers = {'content-type': 'application/json'}
requests.post(
  gitcommits, data=json.dumps(payload), headers=headers,
  auth=HTTPBasicAuth(prompt('API user: '), prompt('password: '))
)
